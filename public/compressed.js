class FancyChart{constructor(a){this.container=document.getElementById(a);const b=this.container.appendChild(document.createElement("canvas"));b.width=.9*window.innerWidth,b.height=500,b.addEventListener("mousemove",this.handlePointSelection.bind(this)),b.addEventListener("click",this.handlePointSelection.bind(this)),this.ctx=b.getContext("2d");const c=this.container.appendChild(document.createElement("canvas"));c.width=.9*window.innerWidth,c.height=150,c.style.cursor="pointer",c.addEventListener("mousedown",this.startChangeChartArea.bind(this)),this.mapCtx=c.getContext("2d"),this.descriptionWindow=this.container.appendChild(document.createElement("div")),this.descriptionWindow.classList.add("description"),this.descriptionDate=this.descriptionWindow.appendChild(document.createElement("span")),this.descriptionValues=this.descriptionWindow.appendChild(document.createElement("div")),this.descriptionValues.classList.add("values"),this.descriptionLabels=this.descriptionWindow.appendChild(document.createElement("div")),this.descriptionLabels.classList.add("labels"),this.checkBoxesFlexContainer=this.container.appendChild(document.createElement("div")),this.checkBoxesFlexContainer.classList.add("flex-container"),this.viewPortAreaCtrl={},this.xAxisGap=20,this.lines=[],this.xScale=1,this.yScale=1,this.selectedIndex=null,this.dragTimer=null,addEventListener("resize",this.handleResize.bind(this))}loadChart({columns:d=[],types:a,colors:b,names:c}){d.forEach(([c,...d])=>{if("x"===a[c])this.xAxis=d.sort((c,a)=>c-a);else{const a=this.checkBoxesFlexContainer.appendChild(document.createElement("div"));a.id=c;const e=a.appendChild(document.createElement("label"));e.innerText=c,e.style.color=b[c],e.classList.add("container");const f=e.appendChild(document.createElement("input"));f.setAttribute("type","checkbox"),f.setAttribute("checked",!0),f.addEventListener("change",this.toggleLine.bind(this,c));const g=e.appendChild(document.createElement("span"));g.classList.add("checkmark"),g.style.backgroundColor=b[c],this.lines.push([c,...d])}}),this.start=0,this.end=Math.round((this.xAxis.length-1)/4),this.disabledLines=[],this.colors=b,this.names=c,this.setViewPort(this.start,this.end),this.renderMap()}calcYScale(a){const{ctx:{canvas:{height:g}},lines:b,start:c,end:d,xAxisGap:e,yScale:f}=this;this.maxY=Math.max(...[].concat(...b.map(([a,...b])=>b.slice(c,d)))),this.dyScale=((g-e-25)/this.maxY-f)/a,this.ySteps=a}animateYScale(){const{dyScale:a,ySteps:b}=this;1<b&&requestAnimationFrame(this.animateYScale.bind(this)),this.ySteps--,this.yScale+=a,this.render()}calcCanvasPointY(a){const{ctx:{canvas:{height:d}},xAxisGap:b,yScale:c}=this;return d-b-a*c}calcXScale(a){const{ctx:{canvas:{width:f}},xAxis:b,start:c,end:d,xScale:e}=this;this.dxScale=(f/(b[d]-b[c])-e)/a,this.xSteps=a}animateXScale(){const{dxScale:a,xSteps:b}=this;1<b&&requestAnimationFrame(this.animateXScale.bind(this)),this.xSteps--,this.xScale+=a,this.render()}calcCanvasPointX(a){const{xAxis:b,xScale:c,start:d}=this;return(a-b[d])*c}handleResize(){this.ctx.canvas.width=.9*window.innerWidth,this.mapCtx.canvas.width=.9*window.innerWidth,this.renderMap(),this.calcXScale(20),this.animateXScale()}handlePointSelection({x:a}){const{ctx:{canvas:{offsetLeft:f}},xAxis:b,start:c,end:d,lineStep:e}=this;let g=c;const h=a-f;for(let f=c;f<d;f+=e)g=Math.abs(h-this.calcCanvasPointX(b[f]))<Math.abs(h-this.calcCanvasPointX(b[g]))?f:g;this.selectedIndex=g,this.render()}toggleLine(a){const b=document.getElementById(a);b.querySelector("input").getAttribute("checked")&&(b.querySelector("span").style.backgroundColor=this.colors[a]);const c=this.lines.findIndex(([b])=>b===a);-1===c?this.lines.push(...this.disabledLines.splice(this.disabledLines.findIndex(([b])=>b===a),1)):this.disabledLines.push(...this.lines.splice(c,1)),this.calcYScale(20),this.animateYScale()}setViewPort(a,b){this.start=a,this.end=b,this.lineStep=25<b-a?Math.round((b-a)/25):1,this.renderMap(),this.calcXScale(30),this.calcYScale(20),this.animateXScale(),this.animateYScale()}render(){const{ctx:{canvas:{width:j,height:k,offsetTop:l}},ctx:a,xAxis:b,lines:c,start:d,end:e,maxY:f,colors:g,lineStep:h,selectedIndex:i}=this;a.clearRect(0,0,j,k),a.beginPath(),a.font="14px Myriad Pro, sans-serif",a.fillStyle="grey";for(let c=b[d];c<b[e];c+=~~((b[e]-b[d])/5.3)){const b=new Date(c).toLocaleDateString("us",{month:"short",day:"numeric"});a.fillText(b,this.calcCanvasPointX(c),k-5)}a.strokeStyle="grey",a.lineWidth=1;for(let b=0;b<f;b+=~~(f/5.3)){const c=this.calcCanvasPointY(b);a.moveTo(0,c),a.lineTo(j,c),a.fillText(b,5,c-5)}a.stroke();const m=this.calcCanvasPointX(b[i]);i&&(this.descriptionWindow.style.display="block",this.descriptionWindow.style.left=Math.abs(m-this.descriptionWindow.clientWidth-50)+"px",this.descriptionWindow.style.top=l+50+"px",this.descriptionDate.innerText=new Date(b[i]).toLocaleDateString("us",{weekday:"short",month:"short",day:"numeric"}),this.descriptionValues.innerHTML=c.map(([a,...b])=>`
        <span style='color: ${g[a]}'>${b[i]}</span>
      `).join(""),this.descriptionLabels.innerHTML=c.map(([a])=>`
        <span style='color: ${g[a]}'>${a}</span>
      `).join("")),c.forEach(([c,...f])=>{a.beginPath(),a.strokeStyle=g[c],a.lineJoin="round",a.lineWidth=3,a.moveTo(0,this.calcCanvasPointY(f[d]));for(let g=d+h;g<e;g+=h)a.lineTo(this.calcCanvasPointX(b[g]),this.calcCanvasPointY(f[g]));a.stroke(),a.beginPath(),a.fillStyle="white",a.arc(m,this.calcCanvasPointY(f[i]),8,0,360),a.fill(),a.stroke()})}renderMap(){const{mapCtx:{canvas:{width:i,height:j}},mapCtx:a,xAxis:b,lines:c,disabledLines:d,start:e,end:f,colors:g,lineStep:h}=this;a.clearRect(0,0,i,j),this.mapXScale=i/(b[b.length-1]-b[0]);const k=[...c,...d],l=Math.max(...[].concat(...k.map(([a,...b])=>b)));this.mapYScale=j/l,k.forEach(([c,...d])=>{a.beginPath(),a.strokeStyle=g[c],a.lineJoin="round",a.lineWidth=1,a.moveTo(0,j-d[0]*this.mapYScale);for(let e=h;e<d.length;e+=h)a.lineTo((b[e]-b[0])*this.mapXScale,j-d[e]*this.mapYScale);a.stroke()}),a.beginPath(),a.strokeStyle="rgba(100, 100, 100, .3)",a.fillStyle="rgba(100, 100, 100, .3)",a.lineWidth=1,this.viewPortAreaCtrl.start=Math.round((b[e]-b[0])*this.mapXScale),this.viewPortAreaCtrl.end=Math.round((b[f]-b[0])*this.mapXScale),a.fillRect(0,0,this.viewPortAreaCtrl.start,j),a.stroke(),a.beginPath(),a.fillRect(this.viewPortAreaCtrl.end,0,i-this.viewPortAreaCtrl.end,j),a.stroke()}startChangeChartArea({target:a,x:b}){const{mapCtx:{canvas:{offsetLeft:g,width:h}},xAxis:c,viewPortAreaCtrl:d,start:e,end:f}=this,i=b-g;let j=null;switch(!0){case 20>i-d.start&&0<i-d.start:j="resizeLeft";break;case 20>d.end-i&&0<d.end-i:j="resizeRight";break;case i>d.start&&i<d.end:j="move";}const k=this.changeChartArea.bind(this,j,i,e,f);a.addEventListener("mousemove",k),a.addEventListener("mouseup",()=>{console.log("remove"),a.removeEventListener("mousemove",k)})}changeChartArea(a,b,c,d,{x:e}){let{mapCtx:{canvas:{offsetLeft:i,width:j}},xAxis:f,start:g,end:h}=this;switch(e-=i,a){case"resizeLeft":g=Math.round(f.length*e/j);break;case"resizeRight":h=Math.round(f.length*e/j);break;case"move":const k=Math.round(f.length*(e-b)/j);g=c+k,h=d+k;}0>g&&(g=0),h>f.length-1&&(h=f.length-1),h-g<.1*f.length||this.setViewPort(g,h)}}JSON_DATA.forEach(a=>{const b=new FancyChart("app");b.loadChart(a)});